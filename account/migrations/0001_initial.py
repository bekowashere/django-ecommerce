# Generated by Django 4.1.7 on 2023-03-13 21:57

import account.models
from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("world", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=64,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="Username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        error_messages={
                            "unique": "A user with that email already exists."
                        },
                        help_text="Required. 50 characters or fewer. Example: john.doe@gmail.com",
                        max_length=254,
                        unique=True,
                        verbose_name="Email Address",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="Staff User"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(default=False, verbose_name="Superuser"),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, editable=False
                    ),
                ),
                ("last_login", models.DateTimeField(auto_now=True)),
                (
                    "is_customer",
                    models.BooleanField(default=False, verbose_name="Customer"),
                ),
                (
                    "is_seller",
                    models.BooleanField(default=False, verbose_name="Seller"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Account",
                "verbose_name_plural": "Accounts",
            },
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "address_name",
                    models.CharField(
                        help_text="Ex: Home", max_length=64, verbose_name="Address Name"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=64, verbose_name="First Name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=64, verbose_name="Last Name"),
                ),
                (
                    "company_name",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="Company Name",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="Phone"
                    ),
                ),
                (
                    "street_address_1",
                    models.CharField(max_length=256, verbose_name="Street Address 1"),
                ),
                (
                    "street_address_2",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Street Address 2",
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(max_length=32, verbose_name="Postal Code"),
                ),
                (
                    "city",
                    models.CharField(
                        help_text="Ex: Los Angeles", max_length=64, verbose_name="City"
                    ),
                ),
                (
                    "city_area",
                    models.CharField(
                        help_text="Ex: California",
                        max_length=64,
                        verbose_name="City Area",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="adddress_country",
                        to="world.country",
                        verbose_name="Country",
                    ),
                ),
            ],
            options={
                "verbose_name": "Address",
                "verbose_name_plural": "Addresses",
            },
        ),
        migrations.CreateModel(
            name="SellerUser",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "company_image",
                    models.ImageField(
                        blank=True,
                        default=account.models.default_seller_image_path,
                        null=True,
                        upload_to=account.models.upload_seller_image,
                        validators=[
                            django.core.validators.FileExtensionValidator(
                                ["png", "jpg", "jpeg"]
                            )
                        ],
                        verbose_name="Company Image",
                    ),
                ),
                (
                    "company_name",
                    models.CharField(max_length=128, verbose_name="Company Name"),
                ),
                ("seller_slug", models.SlugField(verbose_name="Slug")),
                (
                    "code",
                    models.CharField(
                        max_length=4, unique=True, verbose_name="Company Code"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "website_url",
                    models.URLField(
                        blank=True,
                        help_text="www.my-site.com",
                        null=True,
                        verbose_name="Website",
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="Hidden Phone",
                    ),
                ),
                (
                    "public_phone_number",
                    models.CharField(
                        blank=True,
                        max_length=32,
                        null=True,
                        verbose_name="Public Phone",
                    ),
                ),
                (
                    "public_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Email Address",
                    ),
                ),
                (
                    "fax_number",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="Fax"
                    ),
                ),
                (
                    "street_address_1",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Street Address 1",
                    ),
                ),
                (
                    "street_address_2",
                    models.CharField(
                        blank=True,
                        max_length=256,
                        null=True,
                        verbose_name="Street Address 2",
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="Postal Code"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True,
                        help_text="Ex: Los Angeles",
                        max_length=64,
                        null=True,
                        verbose_name="City",
                    ),
                ),
                (
                    "city_area",
                    models.CharField(
                        blank=True,
                        help_text="Ex: California",
                        max_length=64,
                        null=True,
                        verbose_name="City Area",
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=11,
                        null=True,
                        verbose_name="Latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        max_digits=11,
                        null=True,
                        verbose_name="Longitude",
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Verified"),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="s_addresses",
                        to="world.country",
                        verbose_name="Country",
                    ),
                ),
                (
                    "languages",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Select spoken languages",
                        to="world.language",
                        verbose_name="Languages",
                    ),
                ),
            ],
            options={
                "verbose_name": "Supplier",
                "verbose_name_plural": "Suppliers",
                "ordering": ("company_name",),
            },
        ),
        migrations.CreateModel(
            name="CustomerUser",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=64, verbose_name="First Name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=64, verbose_name="Last Name"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=32, null=True, verbose_name="Phone"
                    ),
                ),
                (
                    "note",
                    models.TextField(blank=True, null=True, verbose_name="Admin Note"),
                ),
                (
                    "default_shipping_address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="shipping_address",
                        to="account.address",
                        verbose_name="Default Shipping Address",
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer",
                "verbose_name_plural": "Customers",
            },
        ),
        migrations.AddField(
            model_name="address",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="customer_addresses",
                to="account.customeruser",
                verbose_name="Customer",
            ),
        ),
    ]
